{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","LoadingAnimation","StretchBar","keyframes","Bar","delay","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","console","log","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","IMDb","Country","ProductionContainer","Production","img","SubHeading","h4","VideoContainer","Video","iframe","Overview","p","SeasonContainer","Season","figure","SeasonPoster","SeasonCaption","figcaption","emoji","country","f","codePointAt","s","String","fromCodePoint","DetailPresenter","result","backdrop_path","imdb_id","href","production_countries","index","iso_3166_1","origin_country","runtime","episode_run_time","genres","genre","name","production_companies","production_companie","logo_path","src","alt","overview","videos","video","width","height","frameborder","allow","allowfullscreen","seasons","season","DetailContainer","includes","match","push","history","parseId","parseInt","isNaN","path","exact","component","Home","TV","render","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cfab0ce4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  background-color: ${props =>\n    props.current ? \"rgba(52, 152, 219, 0.2)\" : \"inherit\"};\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: background-color 0.5s ease-in-out, border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 24px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst LoadingAnimation = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst StretchBar = keyframes`\n  0%,\n  40%,\n  100% {\n    transform: none;\n  }\n  20% {\n    transform: scale(1.5, 1.5);\n  }\n`;\n\nconst Bar = styled.span`\n  width: 5px;\n  height: 5px;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.5);\n  display: inline-block;\n  margin: 10px;\n  animation: ${StretchBar};\n  animation-delay: ${props => props.delay};\n  animation-duration: 1.5s;\n  animation-iteration-count: infinite;\n`;\n\nexport default () => (\n  <Container>\n    <LoadingAnimation>\n      <Bar delay=\".0s\" />\n      <Bar delay=\".1s\" />\n      <Bar delay=\".2s\" />\n      <Bar delay=\".3s\" />\n      <Bar delay=\".4s\" />\n    </LoadingAnimation>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title && title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"10923b261ba94d897ac6b81148314a3f\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    ;\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api.js\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    airingToday: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, airingToday, popular, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        airingToday={airingToday}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    console.log(searchTerm);\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        loading={loading}\n        error={error}\n        searchTerm={searchTerm}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 100px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(4px);\n  opacity: 0.4;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 20px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 16px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 4px;\n`;\n\nconst IMDb = styled.a`\n  padding: 0px 8px;\n  background-color: rgb(245, 197, 24);\n  color: black;\n  font-weight: 900;\n  border-radius: 2px;\n`;\n\nconst Country = styled.span`\n  margin: 0px 4px;\n`;\n\nconst ProductionContainer = styled.div`\n  margin: 12px 0;\n  width: 70%;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow: scroll;\n`;\nconst Production = styled.img`\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 2px;\n  padding: 4px 4px;\n  margin-right: 4px;\n  height: 30px;\n`;\n\nconst SubHeading = styled.h4`\n  margin: 32px 0px 12px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst VideoContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow: scroll;\n`;\n\nconst Video = styled.iframe`\n  margin-right: 8px;\n`;\n\nconst Overview = styled.p`\n  font-size: 16px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 70%;\n`;\n\nconst SeasonContainer = styled.div`\n  width: 70%;\n  display: flex;\n  flex-wrap: nowrap;\n  overflow: scroll;\n`;\n\nconst Season = styled.figure`\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 4px;\n  margin-right: 8px;\n`;\n\nconst SeasonPoster = styled.img`\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  height: 200px;\n`;\n\nconst SeasonCaption = styled.figcaption`\n  text-align: center;\n  padding: 4px;\n`;\n\nfunction emoji(country) {\n  const offset = 127397;\n  const A = 65;\n  const Z = 90;\n  const f = country.codePointAt(0);\n  const s = country.codePointAt(1);\n  if (country.length !== 2 || f > Z || f < A || s > Z || s < A) {\n    return null;\n  } else {\n    return String.fromCodePoint(f + offset) + String.fromCodePoint(s + offset);\n  }\n}\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n\n          <ItemContainer>\n            {result.imdb_id ? (\n              <IMDb\n                href={`https://www.imdb.com/title/${result.imdb_id}/`}\n                target=\"_blank\"\n              >\n                IMDb\n              </IMDb>\n            ) : null}\n            {result.production_countries ? (\n              <Country>\n                {result.production_countries.map((country, index) =>\n                  emoji(country.iso_3166_1)\n                )}\n              </Country>\n            ) : result.origin_country ? (\n              <Country>\n                {result.origin_country.map((country, index) => emoji(country))}\n              </Country>\n            ) : null}\n            <Item>\n              {result.release_date\n                ? result.release_date && result.release_date.substring(0, 4)\n                : result.first_air_date &&\n                  result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <ProductionContainer>\n            {result.production_companies &&\n              result.production_companies.map((production_companie, index) =>\n                production_companie.logo_path ? (\n                  <Production\n                    key={index}\n                    src={`https://image.tmdb.org/t/p/original${production_companie.logo_path}`}\n                    alt={production_companie.name}\n                  />\n                ) : null\n              )}\n          </ProductionContainer>\n          <SubHeading>Overview</SubHeading>\n          <Overview>{result.overview}</Overview>\n          <SubHeading>Videos</SubHeading>\n          <VideoContainer>\n            {result.videos.results &&\n              result.videos.results.map(video => (\n                <Video\n                  width=\"300\"\n                  height=\"200\"\n                  src={`https://www.youtube.com/embed/${video.key}?controls=0`}\n                  frameborder=\"0\"\n                  allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                  allowfullscreen\n                ></Video>\n              ))}\n          </VideoContainer>\n          {result.seasons && result.seasons.length > 0 && (\n            <>\n              <SubHeading>Seasons</SubHeading>\n              <SeasonContainer>\n                {result.seasons.map((season, index) => (\n                  <Season>\n                    <SeasonPoster\n                      key={index}\n                      src={\n                        season.poster_path\n                          ? `https://image.tmdb.org/t/p/original${season.poster_path}`\n                          : require(\"../../assets/noPosterSmall.png\")\n                      }\n                      alt={season.name}\n                    />\n                    <SeasonCaption>{season.name}</SeasonCaption>\n                  </Season>\n                ))}\n              </SeasonContainer>\n            </>\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parseId = parseInt(id);\n    if (isNaN(parseId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parseId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parseId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n    console.log(result);\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyle = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyle;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}